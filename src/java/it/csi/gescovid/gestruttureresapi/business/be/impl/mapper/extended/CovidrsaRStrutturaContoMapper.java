/*******************************************************************************
* Copyright Regione Piemonte - 2023
* SPDX-License-Identifier: EUPL-1.2
******************************************************************************/
package it.csi.gescovid.gestruttureresapi.business.be.impl.mapper.extended;

import java.util.List;

import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Options;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.type.JdbcType;

import it.csi.gescovid.gestruttureresapi.business.be.impl.mapper.dto.CovidrsaRStrutturaConto;
import it.csi.gescovid.gestruttureresapi.business.be.impl.mapper.dto.extended.CovidrsaRStrutturaContoExt;
import it.csi.gescovid.gestruttureresapi.business.be.impl.mapper.generated.BaseCovidrsaRStrutturaContoMapper;

public interface CovidrsaRStrutturaContoMapper extends BaseCovidrsaRStrutturaContoMapper {

    @Select({
        "<script>",
        "select",
        "crsc.str_conto_id, crsc.sti_id, crsc.str_conto_iban, crsc.str_conto_istituto, crsc.str_conto_desc, crsc.flg_default, ",
        "crsc.validita_inizio, crsc.validita_fine, crsc.data_creazione, crsc.data_modifica, crsc.data_cancellazione, ",
        "crsc.utente_operazione, (crsc.validita_fine &gt; NOW() or crsc.validita_fine is null) AS is_valida ",
        "from covidrsa_r_struttura_conto crsc",
        " join covidrsa_t_struttura_info ctsi on ctsi.sti_id = crsc.sti_id ",
        " where crsc.data_cancellazione is null ",
        "<if test='idStruttura != null'>", 
        " and  ctsi.id_struttura = #{idStruttura,jdbcType=VARCHAR} </if> " ,
        "<if test='onlyValid != null and onlyValid'>", 
        " and  (crsc.validita_fine &gt; NOW() or crsc.validita_fine is null) </if> " ,
        " order by crsc.str_conto_iban ",
        "</script>"
    })
    @Results({
        @Result(column="str_conto_id", property="strContoId", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="sti_id", property="stiId", jdbcType=JdbcType.INTEGER),
        @Result(column="str_conto_iban", property="strContoIban", jdbcType=JdbcType.VARCHAR),
        @Result(column="str_conto_istituto", property="strContoIstituto", jdbcType=JdbcType.VARCHAR),
        @Result(column="str_conto_desc", property="strContoDesc", jdbcType=JdbcType.VARCHAR),
        @Result(column="flg_default", property="flgDefault", jdbcType=JdbcType.BIT),
        @Result(column="validita_inizio", property="validitaInizio", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="validita_fine", property="validitaFine", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="is_valida", property="isValid", jdbcType=JdbcType.BIT)
    })
    List<CovidrsaRStrutturaContoExt> selectFromIdStruttura(@Param("idStruttura") String idStruttura, @Param("onlyValid") Boolean onlyValid);
    

    @Insert({
        "insert into covidrsa_r_struttura_conto (sti_id, str_conto_iban, ",
        "str_conto_istituto, str_conto_desc, ",
        "flg_default, validita_inizio, ",
        "validita_fine, data_creazione, ",
        "data_modifica, data_cancellazione, ",
        "utente_operazione)",
        "values (#{stiId,jdbcType=INTEGER}, #{strContoIban,jdbcType=VARCHAR}, ",
        "#{strContoIstituto,jdbcType=VARCHAR}, #{strContoDesc,jdbcType=VARCHAR}, ",
        "#{flgDefault,jdbcType=BIT},COALESCE(#{validitaInizio,jdbcType=TIMESTAMP},now()), ",
        "#{validitaFine,jdbcType=TIMESTAMP}, now(), ",
        "now(), #{dataCancellazione,jdbcType=TIMESTAMP}, ",
        "#{utenteOperazione,jdbcType=VARCHAR})"
    })
    @Options(useGeneratedKeys=true,keyProperty="strContoId")
    int insert(CovidrsaRStrutturaConto record);
    
    @Update({
        "update covidrsa_r_struttura_conto",
        "set ",
        "flg_default = #{flgDefault,jdbcType=BIT}, ",
          "validita_fine = now() ",
        "where str_conto_id = #{strContoId,jdbcType=INTEGER}",
        " and validita_fine is null "
    })
    int invalidaByPrimaryKey(CovidrsaRStrutturaConto record);



    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table covidrsa_r_struttura_conto
     *
     * @mbg.generated
     */
    @Update({
        "update covidrsa_r_struttura_conto",
        "set sti_id = #{stiId,jdbcType=INTEGER},",
          "str_conto_iban = #{strContoIban,jdbcType=VARCHAR},",
          "str_conto_istituto = #{strContoIstituto,jdbcType=VARCHAR},",
          "str_conto_desc = #{strContoDesc,jdbcType=VARCHAR},",
          "flg_default = #{flgDefault,jdbcType=BIT},",
          "validita_inizio = #{validitaInizio,jdbcType=TIMESTAMP},",
          "validita_fine = #{validitaFine,jdbcType=TIMESTAMP},",
          "data_modifica = now(),",
          "data_cancellazione = #{dataCancellazione,jdbcType=TIMESTAMP},",
          "utente_operazione = #{utenteOperazione,jdbcType=VARCHAR}",
        "where str_conto_id = #{strContoId,jdbcType=INTEGER}"
    })
    int updateByPrimaryKeyWhitDataModifica(CovidrsaRStrutturaConto record);

    @Update({
        "update covidrsa_r_struttura_conto",
        "set ",
          "flg_default = FALSE,",
          "data_modifica = now(),",
          "utente_operazione = #{utenteOperazione,jdbcType=VARCHAR}",
        "where sti_id = #{stiId,jdbcType=INTEGER}",
        " and data_cancellazione is null and flg_default "
    })
    int updateByIdStrutturaAndKeyAndDefault(CovidrsaRStrutturaConto record);


    @Select({ "select crusi.id_struttura from covidrsa_r_struttura_conto crsc ",
        "join covidrsa_t_struttura_info crusi on crusi.sti_id = crsc.sti_id ",
        "where crsc.str_conto_id = #{strContoId,jdbcType=INTEGER} and crsc.data_cancellazione is null " })
    String selectIdStrutturaByPrimaryKey(Integer strContoId);
    
    @Select({ "select ctsi.id_struttura from covidrsa_t_struttura_info ctsi where ctsi.sti_id =  #{stiId,jdbcType=INTEGER} ",
        "and ctsi.data_cancellazione is null " })
    String selectIdStrutturaByStiId(Integer stiId);
}
