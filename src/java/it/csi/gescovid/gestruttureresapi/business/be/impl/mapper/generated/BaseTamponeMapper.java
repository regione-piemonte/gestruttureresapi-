/*******************************************************************************
* Copyright Regione Piemonte - 2023
* SPDX-License-Identifier: EUPL-1.2
******************************************************************************/
package it.csi.gescovid.gestruttureresapi.business.be.impl.mapper.generated;
import java.util.List;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Options;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.type.JdbcType;

import it.csi.gescovid.gestruttureresapi.business.be.impl.mapper.dto.Tampone;

public interface BaseTamponeMapper {

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table tampone
	 * @mbg.generated
	 */
	@Delete({ "delete from tampone", "where id_tampone = #{idTampone,jdbcType=BIGINT}" })
	int deleteByPrimaryKey(Long idTampone);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table tampone
	 * @mbg.generated
	 */
	@Insert({ "insert into tampone (id_soggetto, id_laboratorio, ", "criterio_epidemiologico_covid19, id_test_covid, ",
			"data_test_str, id_ris_tamp, ", "tampone_autorizzato, data_inserimento_richiesta, ",
			"data_ultima_modifica, utente_ultima_modifica, ", "data_test, medico_richiedente, ",
			"contatto_richiedente, tampone_motivo_id, ", "id_univoco, data_prelievo_prevista, ",
			"id_laboratorio_competenza, id_laboratorio_effettivo, ", "id_asr, hotspot_dispeff_id, ",
			"criterio_epidemiologico_id, test_tipo_id, ", "medico_refertante, luogo_id, ",
			"tampone_stato_id, data_prelievo_effettiva, ", "test_rapido_jrc_id, data_creazione, ",
			"data_modifica, webapp_richiedente, ", "id_profilo_richiedente, ruolo_richiedente, ",
			"utente_richiedente, id_ente_richiedente, ", "id_struttura_richiedente, id_area_richiedente, ",
			"webapp_refertante, id_profilo_refertante, ", "ruolo_refertante, utente_refertante, ",
			"id_ente_refertante, id_struttura_refertante, ", "id_area_refertante)",
			"values (#{idSoggetto,jdbcType=BIGINT}, #{idLaboratorio,jdbcType=BIGINT}, ",
			"#{criterioEpidemiologicoCovid19,jdbcType=VARCHAR}, #{idTestCovid,jdbcType=BIGINT}, ",
			"#{dataTestStr,jdbcType=VARCHAR}, #{idRisTamp,jdbcType=BIGINT}, ",
			"#{tamponeAutorizzato,jdbcType=VARCHAR}, #{dataInserimentoRichiesta,jdbcType=TIMESTAMP}, ",
			"#{dataUltimaModifica,jdbcType=TIMESTAMP}, #{utenteUltimaModifica,jdbcType=VARCHAR}, ",
			"#{dataTest,jdbcType=TIMESTAMP}, #{medicoRichiedente,jdbcType=VARCHAR}, ",
			"#{contattoRichiedente,jdbcType=VARCHAR}, #{tamponeMotivoId,jdbcType=INTEGER}, ",
			"#{idUnivoco,jdbcType=VARCHAR}, #{dataPrelievoPrevista,jdbcType=TIMESTAMP}, ",
			"#{idLaboratorioCompetenza,jdbcType=INTEGER}, #{idLaboratorioEffettivo,jdbcType=INTEGER}, ",
			"#{idAsr,jdbcType=BIGINT}, #{hotspotDispeffId,jdbcType=BIGINT}, ",
			"#{criterioEpidemiologicoId,jdbcType=INTEGER}, #{testTipoId,jdbcType=INTEGER}, ",
			"#{medicoRefertante,jdbcType=VARCHAR}, #{luogoId,jdbcType=INTEGER}, ",
			"#{tamponeStatoId,jdbcType=INTEGER}, #{dataPrelievoEffettiva,jdbcType=TIMESTAMP}, ",
			"#{testRapidoJrcId,jdbcType=INTEGER}, #{dataCreazione,jdbcType=TIMESTAMP}, ",
			"#{dataModifica,jdbcType=TIMESTAMP}, #{webappRichiedente,jdbcType=VARCHAR}, ",
			"#{idProfiloRichiedente,jdbcType=INTEGER}, #{ruoloRichiedente,jdbcType=VARCHAR}, ",
			"#{utenteRichiedente,jdbcType=VARCHAR}, #{idEnteRichiedente,jdbcType=INTEGER}, ",
			"#{idStrutturaRichiedente,jdbcType=VARCHAR}, #{idAreaRichiedente,jdbcType=INTEGER}, ",
			"#{webappRefertante,jdbcType=VARCHAR}, #{idProfiloRefertante,jdbcType=INTEGER}, ",
			"#{ruoloRefertante,jdbcType=VARCHAR}, #{utenteRefertante,jdbcType=VARCHAR}, ",
			"#{idEnteRefertante,jdbcType=INTEGER}, #{idStrutturaRefertante,jdbcType=VARCHAR}, ",
			"#{idAreaRefertante,jdbcType=INTEGER})" })
	@Options(useGeneratedKeys = true, keyProperty = "idTampone")
	int insert(Tampone record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table tampone
	 * @mbg.generated
	 */
	@Select({ "select", "id_tampone, id_soggetto, id_laboratorio, criterio_epidemiologico_covid19, id_test_covid, ",
			"data_test_str, id_ris_tamp, tampone_autorizzato, data_inserimento_richiesta, ",
			"data_ultima_modifica, utente_ultima_modifica, data_test, medico_richiedente, ",
			"contatto_richiedente, tampone_motivo_id, id_univoco, data_prelievo_prevista, ",
			"id_laboratorio_competenza, id_laboratorio_effettivo, id_asr, hotspot_dispeff_id, ",
			"criterio_epidemiologico_id, test_tipo_id, medico_refertante, luogo_id, tampone_stato_id, ",
			"data_prelievo_effettiva, test_rapido_jrc_id, data_creazione, data_modifica, ",
			"webapp_richiedente, id_profilo_richiedente, ruolo_richiedente, utente_richiedente, ",
			"id_ente_richiedente, id_struttura_richiedente, id_area_richiedente, webapp_refertante, ",
			"id_profilo_refertante, ruolo_refertante, utente_refertante, id_ente_refertante, ",
			"id_struttura_refertante, id_area_refertante", "from tampone",
			"where id_tampone = #{idTampone,jdbcType=BIGINT}" })
	@Results({ @Result(column = "id_tampone", property = "idTampone", jdbcType = JdbcType.BIGINT, id = true),
			@Result(column = "id_soggetto", property = "idSoggetto", jdbcType = JdbcType.BIGINT),
			@Result(column = "id_laboratorio", property = "idLaboratorio", jdbcType = JdbcType.BIGINT),
			@Result(column = "criterio_epidemiologico_covid19", property = "criterioEpidemiologicoCovid19", jdbcType = JdbcType.VARCHAR),
			@Result(column = "id_test_covid", property = "idTestCovid", jdbcType = JdbcType.BIGINT),
			@Result(column = "data_test_str", property = "dataTestStr", jdbcType = JdbcType.VARCHAR),
			@Result(column = "id_ris_tamp", property = "idRisTamp", jdbcType = JdbcType.BIGINT),
			@Result(column = "tampone_autorizzato", property = "tamponeAutorizzato", jdbcType = JdbcType.VARCHAR),
			@Result(column = "data_inserimento_richiesta", property = "dataInserimentoRichiesta", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "data_ultima_modifica", property = "dataUltimaModifica", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "utente_ultima_modifica", property = "utenteUltimaModifica", jdbcType = JdbcType.VARCHAR),
			@Result(column = "data_test", property = "dataTest", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "medico_richiedente", property = "medicoRichiedente", jdbcType = JdbcType.VARCHAR),
			@Result(column = "contatto_richiedente", property = "contattoRichiedente", jdbcType = JdbcType.VARCHAR),
			@Result(column = "tampone_motivo_id", property = "tamponeMotivoId", jdbcType = JdbcType.INTEGER),
			@Result(column = "id_univoco", property = "idUnivoco", jdbcType = JdbcType.VARCHAR),
			@Result(column = "data_prelievo_prevista", property = "dataPrelievoPrevista", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "id_laboratorio_competenza", property = "idLaboratorioCompetenza", jdbcType = JdbcType.INTEGER),
			@Result(column = "id_laboratorio_effettivo", property = "idLaboratorioEffettivo", jdbcType = JdbcType.INTEGER),
			@Result(column = "id_asr", property = "idAsr", jdbcType = JdbcType.BIGINT),
			@Result(column = "hotspot_dispeff_id", property = "hotspotDispeffId", jdbcType = JdbcType.BIGINT),
			@Result(column = "criterio_epidemiologico_id", property = "criterioEpidemiologicoId", jdbcType = JdbcType.INTEGER),
			@Result(column = "test_tipo_id", property = "testTipoId", jdbcType = JdbcType.INTEGER),
			@Result(column = "medico_refertante", property = "medicoRefertante", jdbcType = JdbcType.VARCHAR),
			@Result(column = "luogo_id", property = "luogoId", jdbcType = JdbcType.INTEGER),
			@Result(column = "tampone_stato_id", property = "tamponeStatoId", jdbcType = JdbcType.INTEGER),
			@Result(column = "data_prelievo_effettiva", property = "dataPrelievoEffettiva", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "test_rapido_jrc_id", property = "testRapidoJrcId", jdbcType = JdbcType.INTEGER),
			@Result(column = "data_creazione", property = "dataCreazione", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "data_modifica", property = "dataModifica", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "webapp_richiedente", property = "webappRichiedente", jdbcType = JdbcType.VARCHAR),
			@Result(column = "id_profilo_richiedente", property = "idProfiloRichiedente", jdbcType = JdbcType.INTEGER),
			@Result(column = "ruolo_richiedente", property = "ruoloRichiedente", jdbcType = JdbcType.VARCHAR),
			@Result(column = "utente_richiedente", property = "utenteRichiedente", jdbcType = JdbcType.VARCHAR),
			@Result(column = "id_ente_richiedente", property = "idEnteRichiedente", jdbcType = JdbcType.INTEGER),
			@Result(column = "id_struttura_richiedente", property = "idStrutturaRichiedente", jdbcType = JdbcType.VARCHAR),
			@Result(column = "id_area_richiedente", property = "idAreaRichiedente", jdbcType = JdbcType.INTEGER),
			@Result(column = "webapp_refertante", property = "webappRefertante", jdbcType = JdbcType.VARCHAR),
			@Result(column = "id_profilo_refertante", property = "idProfiloRefertante", jdbcType = JdbcType.INTEGER),
			@Result(column = "ruolo_refertante", property = "ruoloRefertante", jdbcType = JdbcType.VARCHAR),
			@Result(column = "utente_refertante", property = "utenteRefertante", jdbcType = JdbcType.VARCHAR),
			@Result(column = "id_ente_refertante", property = "idEnteRefertante", jdbcType = JdbcType.INTEGER),
			@Result(column = "id_struttura_refertante", property = "idStrutturaRefertante", jdbcType = JdbcType.VARCHAR),
			@Result(column = "id_area_refertante", property = "idAreaRefertante", jdbcType = JdbcType.INTEGER) })
	Tampone selectByPrimaryKey(Long idTampone);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table tampone
	 * @mbg.generated
	 */
	@Select({ "select", "id_tampone, id_soggetto, id_laboratorio, criterio_epidemiologico_covid19, id_test_covid, ",
			"data_test_str, id_ris_tamp, tampone_autorizzato, data_inserimento_richiesta, ",
			"data_ultima_modifica, utente_ultima_modifica, data_test, medico_richiedente, ",
			"contatto_richiedente, tampone_motivo_id, id_univoco, data_prelievo_prevista, ",
			"id_laboratorio_competenza, id_laboratorio_effettivo, id_asr, hotspot_dispeff_id, ",
			"criterio_epidemiologico_id, test_tipo_id, medico_refertante, luogo_id, tampone_stato_id, ",
			"data_prelievo_effettiva, test_rapido_jrc_id, data_creazione, data_modifica, ",
			"webapp_richiedente, id_profilo_richiedente, ruolo_richiedente, utente_richiedente, ",
			"id_ente_richiedente, id_struttura_richiedente, id_area_richiedente, webapp_refertante, ",
			"id_profilo_refertante, ruolo_refertante, utente_refertante, id_ente_refertante, ",
			"id_struttura_refertante, id_area_refertante", "from tampone" })
	@Results({ @Result(column = "id_tampone", property = "idTampone", jdbcType = JdbcType.BIGINT, id = true),
			@Result(column = "id_soggetto", property = "idSoggetto", jdbcType = JdbcType.BIGINT),
			@Result(column = "id_laboratorio", property = "idLaboratorio", jdbcType = JdbcType.BIGINT),
			@Result(column = "criterio_epidemiologico_covid19", property = "criterioEpidemiologicoCovid19", jdbcType = JdbcType.VARCHAR),
			@Result(column = "id_test_covid", property = "idTestCovid", jdbcType = JdbcType.BIGINT),
			@Result(column = "data_test_str", property = "dataTestStr", jdbcType = JdbcType.VARCHAR),
			@Result(column = "id_ris_tamp", property = "idRisTamp", jdbcType = JdbcType.BIGINT),
			@Result(column = "tampone_autorizzato", property = "tamponeAutorizzato", jdbcType = JdbcType.VARCHAR),
			@Result(column = "data_inserimento_richiesta", property = "dataInserimentoRichiesta", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "data_ultima_modifica", property = "dataUltimaModifica", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "utente_ultima_modifica", property = "utenteUltimaModifica", jdbcType = JdbcType.VARCHAR),
			@Result(column = "data_test", property = "dataTest", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "medico_richiedente", property = "medicoRichiedente", jdbcType = JdbcType.VARCHAR),
			@Result(column = "contatto_richiedente", property = "contattoRichiedente", jdbcType = JdbcType.VARCHAR),
			@Result(column = "tampone_motivo_id", property = "tamponeMotivoId", jdbcType = JdbcType.INTEGER),
			@Result(column = "id_univoco", property = "idUnivoco", jdbcType = JdbcType.VARCHAR),
			@Result(column = "data_prelievo_prevista", property = "dataPrelievoPrevista", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "id_laboratorio_competenza", property = "idLaboratorioCompetenza", jdbcType = JdbcType.INTEGER),
			@Result(column = "id_laboratorio_effettivo", property = "idLaboratorioEffettivo", jdbcType = JdbcType.INTEGER),
			@Result(column = "id_asr", property = "idAsr", jdbcType = JdbcType.BIGINT),
			@Result(column = "hotspot_dispeff_id", property = "hotspotDispeffId", jdbcType = JdbcType.BIGINT),
			@Result(column = "criterio_epidemiologico_id", property = "criterioEpidemiologicoId", jdbcType = JdbcType.INTEGER),
			@Result(column = "test_tipo_id", property = "testTipoId", jdbcType = JdbcType.INTEGER),
			@Result(column = "medico_refertante", property = "medicoRefertante", jdbcType = JdbcType.VARCHAR),
			@Result(column = "luogo_id", property = "luogoId", jdbcType = JdbcType.INTEGER),
			@Result(column = "tampone_stato_id", property = "tamponeStatoId", jdbcType = JdbcType.INTEGER),
			@Result(column = "data_prelievo_effettiva", property = "dataPrelievoEffettiva", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "test_rapido_jrc_id", property = "testRapidoJrcId", jdbcType = JdbcType.INTEGER),
			@Result(column = "data_creazione", property = "dataCreazione", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "data_modifica", property = "dataModifica", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "webapp_richiedente", property = "webappRichiedente", jdbcType = JdbcType.VARCHAR),
			@Result(column = "id_profilo_richiedente", property = "idProfiloRichiedente", jdbcType = JdbcType.INTEGER),
			@Result(column = "ruolo_richiedente", property = "ruoloRichiedente", jdbcType = JdbcType.VARCHAR),
			@Result(column = "utente_richiedente", property = "utenteRichiedente", jdbcType = JdbcType.VARCHAR),
			@Result(column = "id_ente_richiedente", property = "idEnteRichiedente", jdbcType = JdbcType.INTEGER),
			@Result(column = "id_struttura_richiedente", property = "idStrutturaRichiedente", jdbcType = JdbcType.VARCHAR),
			@Result(column = "id_area_richiedente", property = "idAreaRichiedente", jdbcType = JdbcType.INTEGER),
			@Result(column = "webapp_refertante", property = "webappRefertante", jdbcType = JdbcType.VARCHAR),
			@Result(column = "id_profilo_refertante", property = "idProfiloRefertante", jdbcType = JdbcType.INTEGER),
			@Result(column = "ruolo_refertante", property = "ruoloRefertante", jdbcType = JdbcType.VARCHAR),
			@Result(column = "utente_refertante", property = "utenteRefertante", jdbcType = JdbcType.VARCHAR),
			@Result(column = "id_ente_refertante", property = "idEnteRefertante", jdbcType = JdbcType.INTEGER),
			@Result(column = "id_struttura_refertante", property = "idStrutturaRefertante", jdbcType = JdbcType.VARCHAR),
			@Result(column = "id_area_refertante", property = "idAreaRefertante", jdbcType = JdbcType.INTEGER) })
	List<Tampone> selectAll();

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table tampone
	 * @mbg.generated
	 */
	@Update({ "update tampone", "set id_soggetto = #{idSoggetto,jdbcType=BIGINT},",
			"id_laboratorio = #{idLaboratorio,jdbcType=BIGINT},",
			"criterio_epidemiologico_covid19 = #{criterioEpidemiologicoCovid19,jdbcType=VARCHAR},",
			"id_test_covid = #{idTestCovid,jdbcType=BIGINT},", "data_test_str = #{dataTestStr,jdbcType=VARCHAR},",
			"id_ris_tamp = #{idRisTamp,jdbcType=BIGINT},",
			"tampone_autorizzato = #{tamponeAutorizzato,jdbcType=VARCHAR},",
			"data_inserimento_richiesta = #{dataInserimentoRichiesta,jdbcType=TIMESTAMP},",
			"data_ultima_modifica = #{dataUltimaModifica,jdbcType=TIMESTAMP},",
			"utente_ultima_modifica = #{utenteUltimaModifica,jdbcType=VARCHAR},",
			"data_test = #{dataTest,jdbcType=TIMESTAMP},",
			"medico_richiedente = #{medicoRichiedente,jdbcType=VARCHAR},",
			"contatto_richiedente = #{contattoRichiedente,jdbcType=VARCHAR},",
			"tampone_motivo_id = #{tamponeMotivoId,jdbcType=INTEGER},", "id_univoco = #{idUnivoco,jdbcType=VARCHAR},",
			"data_prelievo_prevista = #{dataPrelievoPrevista,jdbcType=TIMESTAMP},",
			"id_laboratorio_competenza = #{idLaboratorioCompetenza,jdbcType=INTEGER},",
			"id_laboratorio_effettivo = #{idLaboratorioEffettivo,jdbcType=INTEGER},",
			"id_asr = #{idAsr,jdbcType=BIGINT},", "hotspot_dispeff_id = #{hotspotDispeffId,jdbcType=BIGINT},",
			"criterio_epidemiologico_id = #{criterioEpidemiologicoId,jdbcType=INTEGER},",
			"test_tipo_id = #{testTipoId,jdbcType=INTEGER},",
			"medico_refertante = #{medicoRefertante,jdbcType=VARCHAR},", "luogo_id = #{luogoId,jdbcType=INTEGER},",
			"tampone_stato_id = #{tamponeStatoId,jdbcType=INTEGER},",
			"data_prelievo_effettiva = #{dataPrelievoEffettiva,jdbcType=TIMESTAMP},",
			"test_rapido_jrc_id = #{testRapidoJrcId,jdbcType=INTEGER},",
			"data_creazione = #{dataCreazione,jdbcType=TIMESTAMP},",
			"data_modifica = #{dataModifica,jdbcType=TIMESTAMP},",
			"webapp_richiedente = #{webappRichiedente,jdbcType=VARCHAR},",
			"id_profilo_richiedente = #{idProfiloRichiedente,jdbcType=INTEGER},",
			"ruolo_richiedente = #{ruoloRichiedente,jdbcType=VARCHAR},",
			"utente_richiedente = #{utenteRichiedente,jdbcType=VARCHAR},",
			"id_ente_richiedente = #{idEnteRichiedente,jdbcType=INTEGER},",
			"id_struttura_richiedente = #{idStrutturaRichiedente,jdbcType=VARCHAR},",
			"id_area_richiedente = #{idAreaRichiedente,jdbcType=INTEGER},",
			"webapp_refertante = #{webappRefertante,jdbcType=VARCHAR},",
			"id_profilo_refertante = #{idProfiloRefertante,jdbcType=INTEGER},",
			"ruolo_refertante = #{ruoloRefertante,jdbcType=VARCHAR},",
			"utente_refertante = #{utenteRefertante,jdbcType=VARCHAR},",
			"id_ente_refertante = #{idEnteRefertante,jdbcType=INTEGER},",
			"id_struttura_refertante = #{idStrutturaRefertante,jdbcType=VARCHAR},",
			"id_area_refertante = #{idAreaRefertante,jdbcType=INTEGER}",
			"where id_tampone = #{idTampone,jdbcType=BIGINT}" })
	int updateByPrimaryKey(Tampone record);
}